import re
import os
from collections import Counter

def get_level_range(level):
    if level < 30:
        return "Below 30"
    elif 30 <= level <= 50:
        return "31-50"
    elif 51 <= level <= 79:
        return "51-79"
    elif 80 <= level <= 99:
        return "80-99"
    else:
        return "100 Above"

def parse_file(filepath):
    with open(filepath, 'r', encoding='utf-8') as f:
        raw_data = f.read()

    entries = [line.strip() for line in raw_data.strip().split("\n") if line.strip()]
    level_ranges = Counter()
    countries = Counter()
    level_list = []

    for entry in entries:
        level_match = re.search(r'Level\s*:\s*(\d+)', entry)
        if not level_match:
            level_match = re.search(r'Lvl\s*:\s*(\d+)', entry)

        country_match = re.search(r'Create Account Country:\s*(\w+)', entry)
        if not country_match:
            country_match = re.search(r'Reg\s*:\s*(\w+)', entry)

        nickname_match = re.search(r'Nickname:\s*(.+)', entry)
        if not nickname_match:
            nickname_match = re.search(r'Name:\s*(\S+)', entry)

        if level_match and country_match and nickname_match:
            level = int(level_match.group(1))
            country = country_match.group(1).upper()
            nickname = nickname_match.group(1).strip()

            level_ranges[get_level_range(level)] += 1
            countries[country] += 1
            level_list.append((nickname, level))

    return level_ranges, countries, sorted(level_list, key=lambda x: -x[1])

def show_summary(level_ranges, countries, level_list):
    print("=== LEVEL RANGE SUMMARY ===")
    for range_name in ["Below 30", "31-50", "51-79", "80-99", "100 Above"]:
        print(f"{range_name:<10} : {level_ranges[range_name]}")

    print("\n=== TOP 5 COUNTRIES ===")
    total = sum(countries.values())
    for country, count in countries.most_common(5):
        percent = (count / total) * 100
        print(f"{country:<5} : {count:<5} ({percent:.1f}%)")

    print("\n=== TOP 3 HIGHEST LEVELS ===")
    for name, level in level_list[:3]:
        print(f"{name:<15} : Level {level}")

def main():
    data_dir = "data"
    print("Available files:")
    files = [f for f in os.listdir(data_dir) if f.endswith('.txt')]
    for i, file in enumerate(files, 1):
        print(f"{i}. {file}")

    choice = input("Enter the number of the file to process: ")
    try:
        index = int(choice) - 1
        selected_file = files[index]
        print(f"\nProcessing: {selected_file}\n")
        filepath = os.path.join(data_dir, selected_file)
        level_ranges, countries, level_list = parse_file(filepath)
        show_summary(level_ranges, countries, level_list)
    except (IndexError, ValueError):
        print("Invalid selection.")

if __name__ == "__main__":
    main()